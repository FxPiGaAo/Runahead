
building gem5:
  python3 `which scons` build/X86/gem5.opt -j9

gem5/build/X86/gem5.opt baseline/two_level.py
build/X86/gem5.opt src/baseline/run_my.py
build/X86/gem5.opt --debug-help

build/X86/gem5.opt --debug-flags=MyExample src/baseline/run_my.py
build/X86/gem5.opt --debug-flags=SimpleMemobj configs/learning_gem5/part2/simple_memobj.py
build/X86/gem5.opt --stats-file=simple_cache --debug-flags=SimpleCache configs/learning_gem5/part2/simple_cache.py

/home/marta/runahead/benchmarks/hpcc-main/RandomAccess/core_single_cpu.o
cd hpl/ ; make clean_arch_all; rm -r lib/Unix; cd ..

build/X86/gem5.opt configs/learning_gem5/part1/simple.py

python ./stats/summarizeStat.py ./m5out ./stats/simple.csv

clang -O3 test.cpp -o test -static -lstdc++
objdump -Sd --dwarf=decodedline test > test_dump.txt


delete all lines following 1000
sed -i.bak '1000,$d' out.txt 

// move data from SWAP to RAM
sudo swapoff -a; sudo swapon -a


kinit -f mmk64@DC.CL.CAM.AC.UK
ssh -K mmk64@sofia.cl.cam.ac.uk
cd /local/scratch/mmk64/Runahead

mmk64@sofia:/local/scratch/mmk64/Runahead/gem5$ python3 ./bin/scons build/X86/gem5.opt -j17

polecam nfs, sambÄ™ +  cachefilesd
